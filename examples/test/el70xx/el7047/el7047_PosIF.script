##############################################################################
## Example: Config for EL7047 positioning interface

require ecmccfg sandst_a "EC_RATE=500"

${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd,         "SLAVE_ID=2,                        HW_DESC=EL7047_PosIF"
${SCRIPTEXEC} ${ecmccfg_DIR}applyComponent.cmd    "COMP=Motor-Generic-2Phase-Stepper, MACROS='I_MAX_MA=500, I_STDBY_MA=200, U_NOM_MV=42000, R_COIL_MOHM=1230,L_COIL_UH=1230'"

# Below is a sequence describing what records to use 
#   Relative positioning
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-StrtType 2")
#   Acceleration time
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-AccCmd 100")
#   Deceleration time
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-DecCmd 100")
#   Velocity setpoint
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-VelCmd 6000")
#   Enable
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-Ctrl 1")
#    Move 10 revs (200step*64microstepping*10)
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-PosCmd 128000")
#-Trigg motion
afterInit("dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl 0")
afterInit("# dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl 1")

#Trigg motion by toggle
# dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl 0
# dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl 1
# Get actual position alt 1
# dbgf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-PosAct
# Get actual position alt 2
# dbgf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-PosAct
# Stop motion
# dbpf ${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl 0

#- PVs:
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-Count
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-PosCmd
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-VelCmd
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-StrtType
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-AccCmd
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-DecCmd
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-Ctrl
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-Cmd
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-Stat
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-Stat
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-WrnAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-ErrAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-StlAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-SyncErrAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-OpnCrctAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-WrnAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-SyncErrAlrm
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Stat
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-PosAct
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Vel
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Time
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-Count-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-Ctrl-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-PosCmd-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-VelCmd-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-StrtType-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-AccCmd-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Pos01-DecCmd-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Drv01-Ctrl-RB
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-PosAct
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-LtchPosAct
#-${IOC}:m${ECMC_EC_MASTER_ID}s00${ECMC_EC_SLAVE_NUM}-Enc01-Cmd-RB

callbackSetQueueSize 3000
