require ecmccfg v8_RC1, "ECMC_VER=v8_RC1,EC_RATE=500"
require ECMC_EXTRA kivel

epicsEnvSet("DEV", "X00AA-FOO-BAR")


${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EK1100"

${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EL1018"

${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EL2808"
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput01,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput02,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput03,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput04,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput05,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput06,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput07,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM},binaryOutput08,1)"

#- top axis
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EL5101"
# Reverse encoder direction:
ecmcConfigOrDie "Cfg.EcAddSdo(${ECMC_EC_SLAVE_NUM},0x8010,0x0e,1,1)"
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B"
# Reverse motor direction:
ecmcConfigOrDie "Cfg.EcAddSdo(${ECMC_EC_SLAVE_NUM},0x8012,0x9,1,1)"

${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}loadYamlAxis.cmd,   "FILE=cfg/ax1.yaml, DEV=${DEV}, DRV_SLAVE=4, ENC_SLAVE=3, ENC_CHANNEL=01"
dbLoadTemplate("${ECMC_EXTRA_TEMPLATES}ctrl.subs","P=${DEV}:,AXIS_NAME=TRX1,AXIS_NO=1,PORT=${ECMC_ASYN_PORT}")


${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EL9410"

#- bottom axis
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}addSlave.cmd,       "HW_DESC=EL5101"
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "HW_DESC=EL7037, CONFIG=-Motor-Nanotec-ST4118L1804-B"

${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}loadYamlAxis.cmd,   "FILE=cfg/ax2.yaml, DEV=${DEV}, DRV_SLAVE=7, ENC_SLAVE=6, ENC_CHANNEL=01"
dbLoadTemplate("${ECMC_EXTRA_TEMPLATES}ctrl.subs","P=${DEV}:,AXIS_NAME=TRX2,AXIS_NO=2,PORT=${ECMC_ASYN_PORT}")

#- virtual axes
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}loadYamlAxis.cmd,   "FILE=cfg/ax10.yaml, DEV=${DEV}"
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}loadYamlAxis.cmd,   "FILE=cfg/ax11.yaml, DEV=${DEV}"
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}loadYamlAxis.cmd,   "FILE=cfg/ax12.yaml, DEV=${DEV}"

dbLoadTemplate("${ECMC_EXTRA_TEMPLATES}ctrl.subs","P=${DEV}:,AXIS_NAME=center,AXIS_NO=10,PORT=${ECMC_ASYN_PORT}")
dbLoadTemplate("${ECMC_EXTRA_TEMPLATES}ctrl.subs","P=${DEV}:,AXIS_NAME=gap,AXIS_NO=11,PORT=${ECMC_ASYN_PORT}")

#- #############################################################################
#- apply configuration
${SCRIPTEXEC} ${ECMC_CONFIG_ROOT}applyConfig.cmd
#- #############################################################################
#- go active
${SCRIPTEXEC} ${ecmccfg_DIR}setAppMode.cmd

#- EXTRA EPICS STUFF

dbLoadRecords extra.db "DEV=${DEV}"

#- be quiet
asynSetTraceMask(MC_CPU1, -1, 0x01)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)

#- reset all errors
ecmcConfigOrDie "ControllerErrorReset()"

