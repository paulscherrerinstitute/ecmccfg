	Start "int0" disabled
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09B9" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Jumps and Function Calls" "Type=0 Label=INT0_CANOPEN Variable=var_i2 Condition=0" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=0 Source=MER" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=4 AND=8000 OR=0" 
	"Jumps and Function Calls" "Type=0 Label=AXISENABLE Variable=VAR_I1 Condition=0" 
	"Jumps and Function Calls" "Type=4" 
	"Jumps and Function Calls" "Type=6 Label=AXISENABLE" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=0 Source=ACR" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=4 AND=2 OR=0" 
	"Jumps and Function Calls" "Type=0 Label=RESTART Variable=VAR_I1 Condition=3" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=0 Source=ACR" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=4 AND=8 OR=0" 
	"Jumps and Function Calls" "Type=0 Label=RESTART Variable=VAR_I1 Condition=3" 
	"Jumps and Function Calls" "Type=4" 
	"Jumps and Function Calls" "Type=6 Label=RESTART" 
	"Miscellaneous" "Type=1" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=0 Source=MCR" 
	"A 16-bit Integer" "Type=0 Destination=VAR_I1 SetVarType=4 AND=1F OR=0" 
	"Arithmetic Operations" "Type=1 Operand1=VAR_I1 Operand2=4" 
	"Jumps and Function Calls" "Type=0 Label=REINIT Variable=VAR_I1 Condition=0" 
	"Arithmetic Operations" "Type=1 Operand1=VAR_I1 Operand2=1" 
	"Jumps and Function Calls" "Type=0 Label=CALL_AXISON Variable=VAR_I1 Condition=3" 
	"Jumps and Function Calls" "Type=6 Label=REINIT" 
	"Free Text" "MODE GS;\r\nUPD;" 
	"Jumps and Function Calls" "Type=6 Label=CALL_AXISON" 
	"Motor Commands" "Type=0" 
	"Jumps and Function Calls" "Type=6 Label=INT0_CANOPEN" 
	End
	Start "int1" disabled
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
		Start "Ready Led OFF" 
		"I/O" "Type=0 SimpleType=1 Port=3 SimpleSet=1 SetLineType=0" 
		End
	"Free Text" "/*\r\nDeactivate the control loops and power stage. The motor will stop freely.\r\n\r\nNOTE: Disabling the next instruction will NOT prevent the motor to stop, since the power stage is already hardware disabled in case of a short-circuit condition.\r\n*/" 
	"Motor Commands" "Type=1" 
	"Free Text" "/*\r\nTrigger the FAULT status by setting bit 3 of SRL register.\r\nAfter executing this instruction, the drive / motor will enter the FAULT status. This action will also stop the execution of the TML program!\r\n\r\nNOTE: To implement a custom error recovery, you can insert your own error recovery sequence before this line.\r\n*/" 
	"A 16-bit Integer" "Type=0 Destination=SRL SetVarType=4 AND=FFFF OR=8" 
	"A 16-bit Integer" "Type=0 Destination=FAULT_REACTION_ACTIVE SetVarType=0 Source=1" 
	End
	Start "int2" disabled
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09B9" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Jumps and Function Calls" "Type=0 Label=INT2_CANOPEN Variable=var_i2 Condition=0" 
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
		Start "Ready Led OFF" 
		"I/O" "Type=0 SimpleType=1 Port=3 SimpleSet=1 SetLineType=0" 
		End
	"Free Text" "/*\r\nDeactivate the control loops and the power stage. The motor will stop freely.\r\n\r\nWARNING: Disabling the next instruction may damage your drive / motor!\r\n*/" 
	"Motor Commands" "Type=1" 
	"Free Text" "/*\r\nTrigger the FAULT status by setting bit 3 of SRL register.\r\nAfter executing this instruction, the drive / motor will enter the FAULT status. This action will also stop the execution of the TML program!\r\n\r\nNOTE: To implement a custom error recovery, you can insert your own error recovery sequence before this line.\r\n*/" 
	"A 16-bit Integer" "Type=0 Destination=SRL SetVarType=4 AND=FFFF OR=8" 
	"Jumps and Function Calls" "Type=0 Label=END_SW_PROTECTIONS" 
	"Jumps and Function Calls" "Type=6 Label=INT2_CANOPEN" 
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
		Start "Ready Led OFF" 
		"I/O" "Type=0 SimpleType=1 Port=3 SimpleSet=1 SetLineType=0" 
		End
	"A 16-bit Integer" "Type=0 Destination=SRL SetVarType=4 AND=FFFF OR=8" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=PCR" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=4 AND=C100 OR=0" 
	"Jumps and Function Calls" "Type=0 Label=OTHER_ERRORS Variable=var_i1 Condition=3" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09F1" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Arithmetic Operations" "Type=1 Operand1=var_i2 Operand2=2" 
	"Jumps and Function Calls" "Type=0 Label=INT2_QUICKSTOP Variable=var_i2 Condition=0" 
	"Jumps and Function Calls" "Type=6 Label=OTHER_ERRORS" 
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
		Start "Ready Led OFF" 
		"I/O" "Type=0 SimpleType=1 Port=3 SimpleSet=1 SetLineType=0" 
		End
	"Jumps and Function Calls" "Type=0 Label=END_SW_PROTECTIONS" 
	"Jumps and Function Calls" "Type=6 Label=INT2_QUICKSTOP" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09E4" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Arithmetic Operations" "Type=1 Operand1=var_i2 Operand2=7" 
	"Jumps and Function Calls" "Type=0 Label=END_SW_PROTECTIONS Variable=var_i2 Condition=3" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x082F" 
	"A 16-bit Integer" "Type=1 Destination=var_i1 MemType=0 Source=1 IncPointer=0" 
	"Free Text" "  // Define event : When actual position remains inside a settle band around the position to reach\r\n  !MC;\r\n  WAIT!; // Wait until the event occurs" 
	"Motor Commands" "Type=1" 
	"Jumps and Function Calls" "Type=6 Label=END_SW_PROTECTIONS" 
	"Motor Commands" "Type=1" 
	"A 16-bit Integer" "Type=0 Destination=FAULT_REACTION_ACTIVE SetVarType=0 Source=1" 
	End
	Start "int3" disabled
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
		Start "Ready Led OFF" 
		"I/O" "Type=0 SimpleType=1 Port=3 SimpleSet=1 SetLineType=0" 
		End
	"Free Text" "/*\r\nDeactivate the control loops and the power stage. The motor will stop freely.\r\n\r\nWARNING: Disabling the next instruction may damage your drive / motor!\r\n*/" 
	"Motor Commands" "Type=1" 
	"Free Text" "/*\r\nTrigger the FAULT status by setting bit 3 of SRL register.\r\nAfter executing this instruction, the drive / motor will enter the FAULT status. This action will also stop the execution of the TML program!\r\n\r\nNOTE: To implement a custom error recovery, you can insert your own error recovery sequence before this line.\r\n*/" 
	"A 16-bit Integer" "Type=0 Destination=SRL SetVarType=4 AND=FFFF OR=8" 
	"A 16-bit Integer" "Type=0 Destination=FAULT_REACTION_ACTIVE SetVarType=0 Source=1" 
	End
	Start "int4" disabled
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09F1" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Arithmetic Operations" "Type=0 Operand1=var_i2 Operand2=1" 
	"Jumps and Function Calls" "Type=0 Label=INT4_NOTHING Variable=var_i2 Condition=0" 
	"A 16-bit Integer" "Type=0 Destination=SRL SetVarType=4 AND=FFFF OR=8" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09F1" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Arithmetic Operations" "Type=1 Operand1=var_i2 Operand2=2" 
	"Jumps and Function Calls" "Type=0 Label=INT4_QUICKSTOP Variable=var_i2 Condition=0" 
	"Jumps and Function Calls" "Type=0 Label=END_ISR4_NOOPENABLED" 
	"Jumps and Function Calls" "Type=6 Label=INT4_QUICKSTOP" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x09E4" 
	"A 16-bit Integer" "Type=0 Destination=var_i2 SetVarType=1 MemType=0 Source=var_i1 IncPointer=0" 
	"Arithmetic Operations" "Type=1 Operand1=var_i2 Operand2=7" 
	"Jumps and Function Calls" "Type=0 Label=END_ISR4_NOOPENABLED Variable=var_i2 Condition=3" 
	"A 16-bit Integer" "Type=0 Destination=var_i1 SetVarType=0 Source=0x082f" 
	"A 16-bit Integer" "Type=1 Destination=var_i1 MemType=0 Source=1 IncPointer=0" 
	"Free Text" "  // Define event : When actual position remains inside a settle band around the position to reach\r\n  !MC;\r\n  WAIT!; // Wait until the event occurs" 
	"Jumps and Function Calls" "Type=6 Label=END_ISR4_NOOPENABLED" 
	"Motor Commands" "Type=1" 
		Start "Error Led ON" 
		"I/O" "Type=0 SimpleType=1 Port=2 SimpleSet=0 SetLineType=0" 
		End
	"A 16-bit Integer" "Type=0 Destination=FAULT_REACTION_ACTIVE SetVarType=0 Source=1" 
	"Jumps and Function Calls" "Type=6 Label=INT4_NOTHING" 
	End
	Start "int5" disabled
	End
	Start "int6" disabled
	End
	Start "int7" disabled
	End
	Start "int8" disabled
	End
	Start "int9" disabled
	End
	Start "int10" disabled
	End
	Start "int11" disabled
	End
	Start "int12" disabled
	End
	Start "int13" disabled
	"Free Text" "/* This interrupt requires configuration of the parameter DIG_INTCFG before enabling.\r\n\r\nBit description:\r\n0...3: This value represents the INPUT number (0x0 for IN0, 0x1 for IN1, up to 0xF for IN15)\r\n4...7: Reserved\r\n8    : The interrupt will trigger on the Low-High transition\r\n9    : The interrupt will trigger on the High-Low transition\r\nREMARK: if both bits 8 & 9 are set, the interrupt will trigger on both transitions\r\n10..15: Reserved */\r\n" 
	End
