<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PLC on ecmccfg</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/</link><description>Recent content in PLC on ecmccfg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/index.xml" rel="self" type="application/rss+xml"/><item><title>syntax</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/syntax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/syntax/</guid><description>In ECMC, PLCs are based on the exprtk expression evaluation library. For detailed syntax help please visit the exprtk website
common errors, misconceptions and info operators :=: assignment = or ==: equal comparison functions PLC do not immediately write to the bus! The PLC will execute synchronous to the cycle, or at an integer fraction of it. The processed data will be send to the bus with the next cycle.</description></item><item><title>function libs</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/function_libs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/function_libs/</guid><description>function libs Function libraries can be loaded into ecmc PLCs by loadPLCLib.cmd. The command takes these parameters:
FILE: definition file, i.e. ./plc/homeSlit.plc PLC_ID: (optional) PLC number, default last loaded PLC PLC_MACROS: (optional) Substitution macros for PLC code. The macros &amp;ldquo;SELF_ID&amp;rdquo;,&amp;ldquo;SELF&amp;rdquo;,M_ID, and M are reserved: &amp;ldquo;SELF_ID&amp;rdquo; = PLC Id of this plc &amp;ldquo;SELF&amp;rdquo; = &amp;ldquo;plc${SELF_ID}&amp;rdquo; &amp;ldquo;M_ID&amp;rdquo; = EtherCAT master ID &amp;ldquo;M&amp;rdquo; = &amp;ldquo;ec${M_ID}&amp;rdquo; INC: (optional) List of directories for include files to pass to MSI (if several paths then divide with &amp;lsquo;:').</description></item><item><title>best practice</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/best_practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/plc_cfg/best_practice/</guid><description>best practice Here you can find some best practice configurations for common use cases.
Macros MSI include, substitute Printouts Description Common PLC code in ecmccfg/plc_lib The complete examples with startup files can be found here
macros Use of macros makes the code more generic. When loading a PLC file with &amp;ldquo;loadPLCFile.cmd&amp;rdquo;, custom macros can be defined in &amp;ldquo;PLC_MACROS&amp;rdquo;:
${SCRIPTEXEC} ${ecmccfg_DIR}loadPLCFile.cmd, &amp;#34;FILE=./cfg/main.plc, INC=.:./cfg/, DESC=&amp;#39;Test&amp;#39;, SAMPLE_RATE_MS=1000, PLC_MACROS=&amp;#39;BO_S_ID=${ECMC_EC_SLAVE_NUM}&amp;#39;&amp;#34; NOTE: ECMC_EC_SLAVE_NUM expands to the ID of the last added slave.</description></item></channel></rss>