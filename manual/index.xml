<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>manual on ecmccfg</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/</link><description>Recent content in manual on ecmccfg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://paulscherrerinstitute.github.io/ecmccfg/manual/index.xml" rel="self" type="application/rss+xml"/><item><title>build at PSI</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/build/</guid><description>These instructions only work at PSI!
Build at PSI, using driver.makefile by default this module is only build for RHEL7 and Epics &amp;gt;=R7.0.5
build on login cluster make [LIBVERSION] [clean] [uninstall] install check a particular version check the module loads for version dev, Epics R7+ and ECMC version dev, note MASTER_ID=-1 which runs ECMC in master-less mode. Make proper adjustments to match your needs in terms of versions.</description></item><item><title>introduction</title><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/introduction/</guid><description>principle EtherCAT requires the field bus components (slaves) to be configured on the master. The master must know about the data exchanges with the slaves, this is referred to as process image.
During IOC-startup, the requested configuration is validated against the actually present hardware on the bus. Mismatches will result in an error, the IOC will not start.
Blindly restarting the IOC, with only partially working EtherCAT hardware, will results in an inoperable IOC!</description></item><item><title/><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/configuration/data_storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/configuration/data_storage/</guid><description>Data storage examples This dir contains two examples: here.
Continiously add value to data storage. Push to epics by hw trigger. Continiously add value to data storage. Push to epics by epics pv trigger. Data buffered data can be accessed by the &amp;ldquo;IOC_TEST:ds0-Data-Act&amp;rdquo; waveform pv (NELM 10000) Custom scale and offset can be applied to the stored values by MACROS (to the plc) in the startup file.
1 Push to epics by hw trigger In this example the data stored in dataStorage 0 is pushed to epics at a falling edge of the axis 1 high limit.</description></item><item><title/><link>https://paulscherrerinstitute.github.io/ecmccfg/manual/configuration/iocsh_utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulscherrerinstitute.github.io/ecmccfg/manual/configuration/iocsh_utils/</guid><description>ECMC Iocsh Utilities Iocsh function &amp;ldquo;ecmcEpicsEnvSetCalc()&amp;rdquo; &amp;ldquo;ecmcEpicsEnvSetCalc()&amp;rdquo; is used to evaluate expressions and set result to EPCIS environment variables. Usefull for calculate:
slave offsets sdo/pdo adresses (also in hex) scalings in motion record fields &amp;hellip; ecmcEpicsEnvSetCalc -h Use &amp;quot;ecmcEpicsEnvSetCalc(&amp;lt;envVarName&amp;gt;, &amp;lt;expression&amp;gt;, &amp;lt;format&amp;gt;)&amp;quot; to evaluate the expression and assign the variable. &amp;lt;envVarName&amp;gt; : EPICS environment variable name. &amp;lt;expression&amp;gt; : Calculation expression (see exprTK for available functionality). Examples: Simple expression:&amp;quot;5.5+${TEST_SCALE}*sin(${TEST_ANGLE}/10)&amp;quot;. Use of &amp;quot;RESULT&amp;quot; variable: &amp;quot;if(${TEST_VAL}&amp;gt;5){RESULT:=100;}else{RESULT:=200;};&amp;quot;.</description></item></channel></rss>